{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "bWrite API",
    "description": "This project is a backed service that has all the features that a blog website would have",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "Auth",
      "description": "API for the authentication system."
    },
    {
      "name": "Profile",
      "description": "API for users' profiles"
    },
    {
      "name": "Users",
      "description": "API for users in the system"
    }
  ],
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/signup": {
      "post": {
        "tags": ["Auth"],
        "description": "allow user to signup",
        "parameters": [
          {
            "name": "signupDto",
            "in": "body",
            "description": "values needed from a user to signup",
            "schema": {
              "$ref": "#/definitions/SignupDto"
            }
          }
        ]
      }
    },
    "/login": {
      "post": {
        "tags": ["Auth"],
        "description": "allow user to login into hist/her account",
        "parameters": [
          {
            "name": "loginDto",
            "in": "body",
            "description": "values needed from a user to login into his account",
            "schema": {
              "$ref": "#/definitions/LoginDto"
            }
          }
        ]
      }
    },
    "/logout": {
      "delete": {
        "tags": ["Auth"],
        "description": "allow users to logout from their accounts"
      }
    },
    "/refersh": {
      "post": {
        "tags": ["Auth"],
        "description": "allow users to refersh their tokens",
        "parameters": [
          {
            "name": "refershToken",
            "in": "body",
            "description": "valid refershToken to generate a new access token",
            "schema": {
              "refershToken": "string"
            }
          }
        ]
      }
    },
    "/Profile": {
      "get": {
        "tags": ["Profile"],
        "description": "allow user to get his private profile data",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "user must be authenticated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ]
      }
    },
    "/profile": {
      "put": {
        "tags": ["Profile"],
        "description": "allow user to update his private profile data",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "user must be authenticated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ]
      }
    },
    "/addUser": {
      "post": {
        "tags": ["Users"],
        "description": "Create new user in system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "New user is created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all users in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      }
    },
    "/user/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of user that we want to find",
          "type": "integer"
        }
      ],
      "delete": {
        "summary": "Delete user with given ID",
        "tags": ["Users"],
        "responses": {
          "200": {
            "description": "User is deleted",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "put": {
        "summary": "Update user with give ID",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User with new values of properties",
            "schema": {
              "$ref": "#/definitions/updateUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User is updated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "SignUpDto": {
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },

        "password": {
          "type": "string"
        },
        "profilePicUrl": {
          "type": "string"
        }
      }
    },
    "LoginDto": {
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "User": {
      "required": ["_id"],
      "properties": {}
    },

    "_User": {
      "required": ["name", "_id", "companies"],
      "properties": {
        "_id": {
          "type": "integer",
          "uniqueItems": true
        },
        "isPublic": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "books": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "amount": {
                "type": "number"
              }
            }
          }
        },
        "companies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "updateUser": {
      "required": ["name", "companies"],
      "properties": {
        "isPublic": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "books": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "amount": {
                "type": "number"
              }
            }
          }
        },
        "companies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Users": {
      "type": "array",
      "$ref": "#/definitions/User"
    }
  }
}
